<h1>About</h1>
<p>個人網站:<a href="https://mdecp2024.github.io/hw-BrianTsai071/content/index.html">https://mdecp2024.github.io/hw-BrianTsai071/content/index.html</a></p>
<p>個人倉儲: <a href="https://github.com/mdecp2024/hw-BrianTsai071">https://github.com/mdecp2024/hw-BrianTsai071</a></p>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">ldodwua</span></p>
<p>個人倉儲:</p>
<p>個人網站:</p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<p></p>
<h1>HW 1</h1>
<p><br/><br/>心得</p>
<h3>基於瀏覽器的分散式版次管理與整合程式開發環境心得</h3>
<p>在這次課題中，我學習了如何利用瀏覽器建立分散式版次管理以及整合程式開發環境，並深入探索了相關技術，包括 GitHub、Python 與 Jupyter Notebook 的應用。此外，針對不同硬體與授權模式的效能比較，也幫助我更全面理解開發環境的最佳實踐。</p>
<hr/>
<h4><strong>學習內容摘要</strong></h4>
<p><strong>1. GitHub 與 Codespaces 的概念</strong><br/>GitHub 是一個強大的分散式版次管理平台，可以輕鬆進行程式碼儲存、共享及協作。而 Codespaces 則提供了一個基於雲端的整合開發環境（IDE），無需本地化安裝繁重的軟體，即可快速啟動與管理程式碼開發，這對於分散式團隊協作非常有利。</p>
<p><strong>2. 靜態 HTTPS 授權的優勢</strong><br/>透過將 CMSIMDE 中的 <code>wsgi.py</code> 配置從動態授權（<code>ssl_context="adhoc"</code>）切換為靜態檔案授權（<code>ssl_context=('cert.pem', 'key.pem')</code>），效能有顯著提升。根據測試，執行時間可以縮短約 20%-50%，這在處理頻繁請求的開發環境中非常重要。此外，生成證書的方法（如使用 OpenSSL）也非常直觀。</p>
<p><strong>3. 儲存媒體的選擇與效能分析</strong></p>
<ul>
<li>使用 USB 隨身碟儲存與執行作業倉儲，雖然便於攜帶，但因傳輸速率的限制，執行速度通常比固態硬碟（SSD）慢 3-10 倍。</li>
<li>為提升效能，建議將頻繁使用的應用程式安裝於 C:\ 固態硬碟，僅將必需的數據存放於 USB 中，這樣可以兼顧便攜性與效能。</li>
</ul>
<hr/>
<h4><strong>實作與體驗</strong></h4>
<p>在實作過程中，我完成了以下幾個重要步驟：</p>
<ol>
<li>使用學號申請 GitHub 免費帳號，並利用課程提供的教材（如 Learn Python with Jupyter）進一步熟悉程式開發與 Notebook 的應用。</li>
<li>依據課堂指導，透過 OpenSSL 生成靜態授權的 <code>cert.pem</code> 與 <code>key.pem</code>，並將其整合到 Flask 應用中以提升效能。</li>
<li>比較 USB 隨身碟與 C:\ 固態硬碟在執行作業倉儲時的速度差異，發現固態硬碟效能顯著更高，尤其在大型檔案的讀取與寫入方面。</li>
</ol>
<hr/>
<h4><strong>心得與反思</strong></h4>
<p>透過本次學習，我深刻體會到選擇合適的開發環境與配置對於提高效率的重要性。靜態 HTTPS 授權的效能提升及 SSD 儲存的速度優勢，都是以小改進換取大提升的實例。此外，學習如何善用工具（如 GitHub 和 Jupyter Notebook），也讓我在日後的開發中能更加得心應手。</p>
<p>最讓我印象深刻的是透過分散式版次管理進行多人協作的便利性。無論是在個人專案還是團隊開發中，GitHub 的 pull requests、issue tracking 等功能都能有效提升溝通與效率，讓程式開發的流程更加順暢。</p>
<p>未來，我希望能更多地應用所學知識於實際專案中，特別是在效能優化與跨平台開發方面。我也計劃深入學習 Python 與 Flask，進一步掌握後端技術，為自己的專業技能增添更多價值。</p>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<p></p>
<h1>w7</h1>
<p>*我已經學會簡單的python程式了*</p>
<p></p>
<p>
<script src="https://gist.github.com/BrianTsai071/9d489bbeb666a47a02486799a0d5774f.js"></script>
</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/phNMAXWA9fk?si=eEL5QFo4SImcyhmr" title="YouTube video player" width="560"></iframe></p>
<h1>w9</h1>
<p>w9.triangle</p>
<p><img alt="" height="153" src="/images/triangle.1.png" width="800"/></p>
<h5>w9.triangle.2</h5>
<p><img alt="" height="384" src="/images/triangle.png" width="800"/></p>
<h2>Brython.triangle1</h2>
<p><img alt="" height="553" src="/images/brython.w9.triangle1.png" width="800"/></p>
<h2>Brython.triangle2</h2>
<p><img alt="" height="800" src="/images/brython.w9.triangle2.png" width="733"/></p>
<h4>jyputer1</h4>
<h4><a href="/downloads/triangle1.ipynb">/downloads/triangle1.ipynb<img alt="" height="244" src="/images/jupyter1.png" width="800"/></a></h4>
<h4>jyputer2</h4>
<p><a href="/downloads/triangle2.ipynb">/downloads/triangle2.ipynb</a></p>
<p><img alt="" height="303" src="/images/jupyter2.png" width="800"/></p>
<h1>HW1 exam</h1>
<h2>w10_hw</h2>
<p>題目一</p>
<p><span>題目一</span><span>: 請利用</span><a href="https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">程式一</a><span>的原始碼, 分別在自己網站的 Brython 頁面、SciTE 編輯器、命令提示字元視窗、Jupyter Lab 以及 Codespaces 環境中執行, 所完成的操作影片, 請以"國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目一: 學號" 作為標題, 並在影片說明欄位中敘述此一影片的操作概要與心得, 完成後請將影片上傳至個人 Youtube 帳號中, 並嵌入個人網站中的 "w10" 頁面.</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OHjxkXWYKAU?si=wiRexHZlZ3snB0zT" title="YouTube video player" width="560"></iframe></p>
<h4><span>心得與做法:</span></h4>
<p><span>利用codespace、brython、jupyter、cmd、scite執行程式，我覺得我有學習到每個編譯器的操作過程</span></p>
<p><span>把前面學到的東西統整起來 有學習到程式相關的東西</span></p>
<h4><span>題目二</span></h4>
<p><span>題目二: 請問 Python 程式中有關變數的命名, 除了必須以"_", 以及英文大小寫字母開頭之外, 還有甚麼需要特別注意的地方? 與所謂的"關鍵字"(<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/9d7d4227cc13cdad06544e3960c90a1adfb5c388/python_keywords.py">Keywords</a>)有關係嗎? 請實際舉例, 針對 Python 程式命名的規則編寫程式, 並採上一題的五種程式執行方法, 展示正確變數命名與違反變數命名時, 所顯示的錯誤訊息回應. 影片命名及嵌入網頁要求與題目一相同, 但必須使用"題目二"標示.</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/uTqy52G772o?si=GFTuuxvS9h3m-69Z" title="YouTube video player" width="560"></iframe></p>
<h4><span>心得與做法:<br/></span></h4>
<h4><span>scite、codespace、jupyter、brython、cmd 的正確與錯誤程式樣式</span></h4>
<p><span>了解到正確與錯誤的語法差異</span></p>
<h4><span>題目三</span></h4>
<p><span>題目三: <a href="http://mde.tw/cp2024/content/Problem_set.html">http://mde.tw/cp2024/content/Problem_set.html</a> 中有利用 Python 程式解決物理與微積分的範例流程, 請根據過程中所得到的 Python 程式, 利用題目一中的五種方法執行後, 在影片說明欄位及個人 w10 頁面中說明解題流程與心得, 影片命名及嵌入網頁要求與題目一相同, 但必須使用"題目三"標示.</span></p>
<p><span>心得與做法:</span></p>
<p><span>利用scite、cmd、codespace、jupyter、brython進行三個物理及一個微積分程式，讓我更熟悉每一個程式編譯器的操作模式，也讓我知道物理及數學問題可以使用程式解答</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/92oWlGxdr7M?si=G7Zdv5HcdCmSnXtP" title="YouTube video player" width="560"></iframe></p>
<p><strong></strong></p>
<h2>w11_hw</h2>
<p><span>已知可以用 Python 程式由上往下列印三角形 *, 或由左往右列印三角形 *, 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行. (提示: ?src=gist_script_URL)  </span></p>
<p><span>心得:有稍微看一下程式內容，嘗試去理解意思。 </span></p>
<p><span>解題過程:利用*由左而右即由上而下做三角形，我利用chatgpt 幫求出答案</span></p>
<p><span> 已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域.</span></p>
<p><span style="font-size: 11px;">心得:有稍微看一下程式內容，嘗試去理解意思。</span></p>
<p><span style="font-size: 11px;">解題過程:利用chatgpt 求解得出程式內容。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/57C6cmRGJY4?si=RRd4hNqe5OMFa7Cf" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/b9c20996d6ab4e73cd712754b9d2b131/raw/bb6ff1e437d05e60625bb8237389d30c13c4da81/W11.py">w11.py</a></p>
<script src="https://gist.github.com/BrianTsai071/b9c20996d6ab4e73cd712754b9d2b131.js"></script><h2>w12_hw</h2>
<p>
<script src="https://gist.github.com/BrianTsai071/7597f4f16e6ccb6f18323cff5b098d8d.js"></script>
</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/UHECpJTJ0CA?si=gloemRT4Rgc08S76" title="YouTube video player" width="560"></iframe></p>
<p>心得:透過 Brython 和 Jupyter Lab 執行筆記本程式，加深了對 Python 語法的理解，例如字串處理、迴圈與搜尋演算法的應用。過程中熟悉了 Brython 的瀏覽器環境，提升了程式執行與問題解決的能力。</p>
<h2>w13_hw</h2>
<p>
<script src="https://gist.github.com/BrianTsai071/1dbcaad32ea7dab444bd5af7cc42860c.js"></script>
</p>
<p><a href="/https:/gist.github.com/BrianTsai071/1dbcaad32ea7dab444bd5af7cc42860c.js" title="w13程式"></a><a href="/get_page/w13/https:/gist.github.com/BrianTsai071/1dbcaad32ea7dab444bd5af7cc42860c.js" title="w13 程式"></a><img alt="" height="614" src="/images/w13.png" width="800"/></p>
<h2>w14_hw</h2>
<p>
<script src="https://gist.github.com/BrianTsai071/a5ae3d006607d8cdad32a946b5e3f013.js"></script>
</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qX0YL9Mp808?si=KmeHc8FulUmNYxvA" title="YouTube video player" width="560"></iframe></p>
<p>w15.html</p>
<h2>w15_hw</h2>
<p></p>
<script src="https://gist.github.com/BrianTsai071/8411080304c04ff360e6faca1da5080b.js"></script>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/8411080304c04ff360e6faca1da5080b/raw/386e375c4e42ef4661d66c4450c371e7447fc6af/sum_1_to_100.py">w15_anchor</a></p>
<p><a p=""></a></p>
<p style="text-align: center;">---------------------------------------------------------------------------------------------------------------</p>
<p></p>
<script src="https://gist.github.com/BrianTsai071/6962d8391f9a3a7a1b96a084d2e7befd.js"></script>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/6962d8391f9a3a7a1b96a084d2e7befd/raw/7061d9cd8bf5b04da34faaeed5c9f66738743e91/w15_addto.py">w15_addto</a></p>
<p style="text-align: center;">---------------------------------------------------------------------------------------</p>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/669fb5bbb31729cb4b2451637fcf4b14/raw/9e4b34622ffebd1f6dc3093f6f7a6ee88569d2c5/w15_add_only_even.py">w15_add_only_even</a></p>
<p></p>
<p></p>
<script src="https://gist.github.com/BrianTsai071/669fb5bbb31729cb4b2451637fcf4b14.js"></script>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/669fb5bbb31729cb4b2451637fcf4b14/raw/9e4b34622ffebd1f6dc3093f6f7a6ee88569d2c5/w15_add_only_even.py" w15_add_only_even=""></a></p>
<p>--------------------------------------------------------------------------</p>
<p><a a="" gt="" p=""></a></p>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/2cc95e01c97222e4749586844be369b0/raw/2d64491a9156407acf4919af87dc1ed6e753399a/w15_add_avoid_8.py">w15_add_avoid_8</a></p>
<script src="https://gist.github.com/BrianTsai071/2cc95e01c97222e4749586844be369b0.js"></script>
<h1>HW2 exam</h1>
<h2>w16_exam1</h2>
<p><img alt="" height="165" src="/images/螢幕擷取畫面 2024-12-29 180823.png" width="700"/></p>
<p><span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6BgzHrfsxAg?si=jw_Wvwq-wWN-qIPs" title="YouTube video player" width="560"></iframe></p>
<p><yt-attributed-string class="style-scope ytd-text-inline-expander" user-input=""><span class="yt-core-attributed-string yt-core-attributed-string--white-space-pre-wrap" dir="auto" role="text"><span class="yt-core-attributed-string--link-inherit-color" dir="auto">題目: 請以自己的學號最後四碼作為繪圖的座標原點, (例如: 若學號最後四碼為 3932, 請將 (39, 32) 作為繪圖座標原點), 並以 pixel=2 的黑色直線分別利用 Brython 繪圖, 標示出向右為正的 X 軸, 以及向下為正的 Y 軸, 並且利用文字標示出原點座標 (例如: (39, 32)), 之後請自選最左側圖形的起始點座標, 直接在頁面畫出下列圖像, 繪圖程式除了必須直接列在頁面 html 檔案外, 也請存入自己的 Gist 區域, 並在所完成的圖像下方, 以自選標題的 anchor 連結至 Gist, 讓使用者點擊該連結後, 可以在各自的 Brython 頁面中繪出下列圖像 心得:問了chatgpt很多問題，才解出這個題目，但到了期末也比較知道怎麼問問題以及問題出在哪裡並除錯。</span></span></yt-attributed-string></p>
<div class="style-scope ytd-text-inline-expander" id="snippet"><a href="https://gist.githubusercontent.com/BrianTsai071/97177f0bd03b602d1200924464cb4bc8/raw/3a1a461c6d6da27e47ec3af02c0b490a595b3c77/w16_exam_1.py">w16_exam_1.py</a></div>
<div class="style-scope ytd-text-inline-expander"></div>
<div class="style-scope ytd-watch-metadata" slot="extra-content"><ytd-structured-description-content-renderer class="style-scope ytd-watch-metadata" id="structured-description" inline-structured-description="" modern="">
<div class="style-scope ytd-structured-description-content-renderer" id="items"><ytd-video-description-infocards-section-renderer at-end="" at-start="" class="style-scope ytd-structured-description-content-renderer" show-creator-custom-url-buttons=""><yt-img-shadow class="style-scope ytd-video-description-infocards-section-renderer no-transition" id="thumbnail" loaded=""></yt-img-shadow></ytd-video-description-infocards-section-renderer>
<div class="style-scope ytd-video-description-infocards-section-renderer" id="header-text"></div>
</div>
</ytd-structured-description-content-renderer></div>
<script src="https://gist.github.com/BrianTsai071/97177f0bd03b602d1200924464cb4bc8.js"></script>
<h2>w16_exam2</h2>
<p><img alt="" height="267" src="/images/螢幕擷取畫面 2024-12-29 181029.png" width="260"/></p>
<p><span>請以</span><span>自己的學號最後四碼</span><span>作為下列繪圖的左上方點座標, (例如: 若學號最後四碼為 3932, 請將 (39, 32) 作為繪圖左上方點座標), 並以紅色文字標示出該點座標 (例如: (39, 32)), 之後請利用 </span><span>pixel=2 的藍色直線</span><span>, </span><span>自訂迷宮畫布大小</span><span>, 直接在頁面畫出下列圖像, 繪圖程式除了必須直接列在頁面 html 檔案外, 也請存入自己的 Gist 區域, 並在所完成的圖像下方, 以自選標題的 anchor 連結至 Gist, 讓使用者點擊該連結後, 可以在各自的 Brython 頁面中繪出下列圖像).</span></p>
<p><span>心得:先用chatgpt大概了解一下程式結構，在一步一步改成與題目一樣的圖形。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/k2ugoEpy4CU?si=IOeTN41p9UEAucee" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/c42c6a8ffd5a7b0f667c9b22bb622461/raw/9fdc2d1cc8bf621444a06377bd058c9028b19aa9/exam_2">exam2</a></p>
<script src="https://gist.github.com/BrianTsai071/c42c6a8ffd5a7b0f667c9b22bb622461.js"></script>
<h2>w16_exam3</h2>
<p><img alt="" height="252" src="/images/螢幕擷取畫面 2024-12-29 181213.png" width="253"/></p>
<p><span>題目一: 請以自己的學號最後四碼作為下列繪圖的左上方點座標, (例如: 若學號最後四碼為 3932, 請將 (39, 32) 作為繪圖左上方點座標), 並以紅色文字標示出該點座標 (例如: (39, 32)), 之後請利用 pixel=2 的黑色直線, 自訂迷宮畫布大小, 直接在頁面畫出下列圖像, 並且利用紅色連續線段標示從上方入口, 走至下方出口的路線圖. </span></p>
<p><span>心得:用與exam2 的相同觀念，將線條改成紅色的把路徑用程式呈現出來，越來越熟悉。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/sqE3whADMig?si=bBJ6Ci3WRrHbQrr6" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://gist.githubusercontent.com/BrianTsai071/3d54ce60fa470f78d559a3749083c7bf/raw/9f8de2c9ef2a522a010edce5df4f540ac54f92ad/w16_exam3">exam3</a></p>
<p></p>
<script src="https://gist.github.com/BrianTsai071/3d54ce60fa470f78d559a3749083c7bf.js"></script>
<h1>Brython</h1>
<p></p>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h1>Final Report</h1>
<p><a href="/downloads/41023249 r計算機.pdf">期末報告</a></p>
<p><br/>期末心得<span>:</span></p>
<p><strong>這學期的「計算機程式」課程，真的讓我對程式設計有了很大的突破與收穫。一開始學<span> Python </span>的時候，其實有點吃力，因為對變數、字串操作這些概念還不熟悉，但透過課堂上的一步步講解，加上<span> Jupyter Lab </span>的實作練習，我慢慢掌握了基礎語法，像是條件判斷、迴圈還有函式設計，後來甚至還接觸到了物件導向這種進階主題。特別是這次作業中，我在<span> Brython </span>和<span> Jupyter Lab </span>兩個環境裡，執行了從<span> 01_string_input_print </span>到<span> 10_for_search </span>的筆記本程式，這過程讓我學會了不同環境的特性和使用方式。<span>Jupyter Lab </span>的即時執行結果很直觀，而<span> Brython </span>讓我覺得很酷，因為可以直接在瀏覽器執行 <span>Python </span>程式，這對網頁應用來說真的很實用。實作的過程中，我不只對程式語法更熟悉了，還學會了怎麼把程式碼上傳到<span> Gist</span>，並把執行連結分享到作業網站上。這不僅是寫程式，還是一次完整的學習流程，包含撰寫、測試、上傳與分享，讓我對程式設計的實用性有更深的體會。總的來說，這堂課讓我對程式設計有了更大的興趣，也讓我對自己的能力更有信心，希望未來可以用這些技能解決更多實際問題，甚至做出一些有趣的專案！</strong></p>
<p></p>